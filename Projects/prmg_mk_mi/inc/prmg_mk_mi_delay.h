/**********************************************************************************************************************
*                                        (c) COPYRIGHT by AO NPK PELENGATOR.                                          *
*                                               All rights reserved.                                                  *
***********************************************************************************************************************
* Module      : bky_arm_delay.h
* Description : Работа с Задержками 1986ВЕ91Т
* Author      : Konstantin Shiluaev
******************************************************************************
******************************************************************************
* Module's Description Record:
* ============================
* $State: Debug$
* $Revision: 0.0.0 $
* $Date: 2015/03/02 10:40:51 $
******************************************************************************/
#ifndef __TIS10_AS_DELAY_H
#define __TIS10_AS_DELAY_H

#include "stdint.h"

#ifdef __cplusplus
extern "C" {
#endif


    /*
    *   0x00249EFF =  2 399 999  тиков[процессорных_циклов]  частота_hclk = 96 [МгЦ]     =  96 000 000 [Гц]
    * ,время 1 прерывания = 0,024[сек] =  24[мс]     =0.024*100    =   2.4[секунд].
    *
    *   0x00249EFF =  2 399 999  тиков[процессорных_циклов]  частота_hclk = 24 [Мгц]  =   24 000 000 [Гц]
    * ,время 1 прерывания = 0,1[сек] =  100[мс]      =0.1*100    =   10 [секунд].
    *
    *  0x00249EFF =  2 399 999  тиков[процессорных_циклов]  частота_hclk = 8 [Мгц]   =   8 000 000 [Гц]
    * ,время 1 прерывания = 0,299[сек] = 299[мс]   =0.299*100  =    30 [секунд].
    *
    *  0x00249EFF =  2 399 999  тиков[процессорных_циклов]  частота_hclk = 40 000 [Гц]  генератор LSI
    * ,время = 59,999[сек].
    *
    *  -----------------------------------------------------------------------------------------------------
    *  Для того чтобы у нас считали одинаково таймеры для DSP и RISC количество процессорных циклов = 0xFFFF = 65535
    *  0xFFFF = 65535 тиков[процессорных_циклов]  частота_hclk = 24 [Мгц] = 24 000 000 [Гц]
    *  время 1 прерывания = 0.002730625 [c] = 2.730625 [мс] //24 [Мгц]
    *                       0.008191875 [c] = 8.191875 [мс] //8  [Мгц]
    *                       0.000682656 [c] = 0.68265  [мс] //96 [Мгц]
   


    *  //Устанаваливаем время прерывания 1[мс] и 1 мкс
    *  Для того чтобы у нас считали одинаково таймеры для DSP и RISC количество процессорных циклов = 0x5DC0 = 24000
    *  частота_hclk = 24 [Мгц] = 24 000 000 [Гц]
    *
    *         время 1 прерывания = 0.001 [c] =    1 [мс] //24 [Мгц]
    *  Для того чтобы у нас считали одинаково таймеры для DSP и RISC количество процессорных циклов = 0x0018 = 24
    *         время 1 прерывания = 0.000001 [c] = 1 [мКс] //24 [Мгц]
    *
    *  задержки(delay):
    *
    *
    *  приблизительная формула для подсчёта: время[с] = [Процессорные циклы] /[частоту]
    *  максимум =  16 777 215 тиков   = 0.699 [секунд]  при 24 [Мгц]
    *
    *  приблизительная формула для подсчёта: время[с] = [Процессорные циклы] /[частоту]
    *  максимум =  65535 тиков   = 0.002730625 [секунд]  при 24 [Мгц]
    *              24000 тиков   = 0.001 [секунд]  =1 [мс] при 24 [Мгц]
    */

 /////////////////////////////////////РАБОТА с ТАЙМЕРОМ/////////////////////////////////////////////
/*Соотношение между названиями регистров Фитон <-> Миландр Системного Таймера SYSTICK*/
// SYS->STRVR     <<<->>>   SysTick->LOAD
// SYS->STCSR     <<<->>>   SysTick->CTRL
// SYS->STCVR     <<<->>>   SysTick->VAL   текущее значение системного таймера





/*Как 24 разрядный таймер разрешение*/
//Базовые времна которые можем получить с помощью таймера от которого буду работать.
//для частоты 8  Мгц   1[cек]    =(0x7A1200)8000000 [ticks] ,1[мс]  = 0x1F40 (8000) [ticks] , 1[мкс] =0x0008(8) [ticks]
//для частоты 24 Мгц   0.5[cек]  =(0xB71B00)12000000[ticks] ,1[мс]  = 0x5DC0 (24000)[ticks] , 1[мкс] =0x0018(24)[ticks]




//для частоты 96 Мгц   0.125[cек]=(0xB71B00)12000000[ticks] ,1[мс]  = 0x17700(96000)[ticks] , 1[мкс] =0x0060(96)[ticks]

//Производные времена.                /*количество повторений*/
//для частоты 24  Мгц   1[сек] = 0.5[сек]  * (2);
//для частоты 96  Мгц   1[сек] = 0.125[сек]* (8);



 ///////////////////////////Работа Системного Таймера/////////////////////////////////
 /*
 Старт Работы Системного таймера осуществляеться при инициализации мы должны выбрать тип используемого
 таймер в bky_arm_delay.h  																			//#define SYSTIMER_MICROSECOND           1   //Микросекунды
																									//#define SYSTIMER_MILLISECOND           1   //Миллисекунды
																									//#define SYSTIMER_SECOND                1   //Секунды
 в зависимости от выбранной частоты процессора тактирование таймера осуществляеться от HCLK=CPUC3 т.е работает с
 частотой процессора в текущий момент работаем на частоте 24 мГц тогда если мы разрешаем прерывание от системного
 таймера одно прерывание соответсвенно 1 микросекунда =1 прерывние;1 миллисекунда = 1 прерывание ; 0.5 секунд =1 прерывние.
  */
 //


//Функции работы с временем вспомогательные
/*функция задержки _Акимова */
void Delay_akimov(uint32_t time, char type);

/*функция задержки в количестве while */
void while_delay(uint32_t  counter);
/*функция задержки системного таймера в тиках 0-16 777 215  при частоте 24 или 96 мГц */
void sys_timer_delay_ticks(unsigned int ticks);                   //



//Функции работы с системным Таймером (SYSTIMER)
/*старт ситемноо таймера с генерацией прерывания*/
void sys_timer_start_en_irq(void);
/*старт ситемноо таймера без генерации прерывания*/
void sys_timer_start_dis_irq(void);
/*остановка системного таймера*/
void sys_timer_stop(void);  


/*функция взять текущий тик*/
unsigned int sys_timer_get_tick(void);
/*функция задержки Секунды[1-60 сек]*/
void sys_timer_second_delay (unsigned short second);


/*функция задержки Миллисекунды[1-1000 сек]*/
void sys_timer_millisecond_delay (unsigned short millisecond);


/*функция задержки Микросекунды[1-1000 сек]
* Пока функция задержки реализована с разрешением 10 мКс 
* Те если мы вводим значение 1 то умножаем его  * 10 = 10 мкС 
* соответсвенно 2 * 10 = 20 	  мКс 
*               3 * 10= 30 	    мКс
                4 * 10= 40      мКс 
                68* 10 = 680    мКС 
                100 * 10 = 1000 мкс 
*/
void sys_timer_microsecond_delay (unsigned short microsecond);

/*берём текущее количество тиков из регистра*/
unsigned int sys_timer_getCounter(void);                         




///////////////////////////Работа c 16 разрядным Таймером_1  /////////////////////////

///////////////////////////Работа c 16 разрядным Таймером_2 /////////////////////////

///////////////////////////Работа c 16 разрядным Таймером_3 /////////////////////////
//Третий таймер у нас будет таймер бытродействия










 //Другие функции
#ifdef __cplusplus
}
#endif




#endif //BKY_ARM_DELAY_H






